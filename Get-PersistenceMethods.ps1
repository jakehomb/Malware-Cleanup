function Get-RegistryPersistenceMethods {
    $Locations = @(
    "HKLM:\Software\Microsoft\Windows\CurrentVersion\Run\",
    "HKLM:\Software\Microsoft\Windows\CurrentVersion\RunOnce\",
    "HKLM:\Software\Microsoft\Windows\CurrentVersion\RunServices\",
    "HKLM:\Software\Microsoft\Windows\CurrentVersion\RunServicesOnce\",
    "HKCU:\Software\Microsoft\Windows\CurrentVersion\Run\",
    "HKCU:\Software\Microsoft\Windows\CurrentVersion\RunOnce\"
    )

    Write-Host "[*] Checking for run keys"

    foreach ($Path in $Locations) {
        $Keys = Get-ItemProperty -Path $Path -ErrorAction SilentlyContinue
        if (!($null -eq $Keys)) {
            Write-Host "[*] Run keys found in $Path"
            $Keys
        }
    }

    Write-Host "[*] If any expected results are missing, please rerun in an Administrator shell."
}

function Get-LoginPersistenceMethods {
    ### Check for Autostart folders by the individual accounts
    $Users = Get-ChildItem -Path "C:\Users"

    foreach ($User in $Users) {
        $Contents = Get-ChildItem -Path "C:\Users\$User\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup" -ErrorAction SilentlyContinue
        if ($null -ne $Contents) {
            Write-Host "[*] AutoRun files in C:\Users\$User\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup\"
            foreach ($Item in $Contents) {
                Write-Host "`t$Item"
            }
        }
    }

    ### Check for autorun of files for all users
    $Contents = Get-Content -Path "C:\ProgramData\Microsoft\Windows\Start Menu\Programs\StartUp" -ErrorAction SilentlyContinue

    if ($null -ne $Contents) {
        Write-Host "[*] AutoRun files in C:\ProgramData\Microsoft\Windows\Start Menu\Programs\StartUp"
        foreach ($Item in $Contents) {
            Write-Host "`t$Item"
        }
    } else {
        Write-Host "[-] No items found for autostart across all users."
        Write-Host "`tPlease ensure you have run this as admin if you haven't already done so."
        Write-Host "`tIf you have, please continue..."
    }
}

function Get-ScheduledTaskPersistence {
    param (
        $LastRunItemCount
    )

    $EnabledTasks = Get-ScheduledTask | Where-Object {$_.State -eq "Ready"}

    $TaskInfoArray = @()

    if ($null -ne $EnabledTasks) {
        foreach ($Task in $EnabledTasks) {
            $TaskInfo = $($Task | Get-ScheduledTaskInfo)
            $TaskInfoArray += ,$TaskInfo
        }
    }
    $TaskInfoArray = $TaskInfoArray | Sort-Object -Property LastRunTime -Descending

    for ($i = 0; $i -lt $LastRunItemCount; $i++) {
        $TaskInfoArray[$i]
    }
}

Get-RegistryPersistenceMethods

Get-LoginPersistenceMethods

Get-ScheduledTaskPersistence -LastRunItemCount 5
